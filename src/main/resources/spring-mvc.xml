<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd">

	<!-- 1,引入配置文件shiro,及要扫描的包 -->
	<import resource="shiro-context.xml"/>
	<context:component-scan base-package="com.*" />
	
	<!--2,避免IE执行AJAX时，返回JSON出现下载文件 -->
    <bean id="mappingJacksonHttpMessageConverter"
          class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
            </list>
        </property>
    </bean>
    
    <!-- 3,启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
    <bean
            class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="mappingJacksonHttpMessageConverter" /> <!-- JSON转换器 -->
            </list>
        </property>
    </bean>
    
    <!--4, 配置试图解析器 方便界面返回数据 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/"></property>   <!-- 视图都放在这个目录下 -->
		<property name="suffix" value=".jsp"></property>	<!-- 以.jsp结尾 -->
	</bean>
	
	<!-- 5,配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
 <!--    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        默认编码
        <property name="defaultEncoding" value="utf-8" />
        文件大小最大值
        <property name="maxUploadSize" value="10485760000" />
        内存中的最大值
        <property name="maxInMemorySize" value="40960" />
    </bean> -->
    
    <mvc:resources location="/html/" mapping="/html/**"></mvc:resources>
	<mvc:resources location="/json/" mapping="/json/**"></mvc:resources>
	<mvc:resources location="/static/" mapping="/static/**"></mvc:resources>
	<mvc:resources location="/topjui/" mapping="/topjui/**"></mvc:resources>
    
    <!-- 定义文件解释器 -->  
<!--      <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">    
        
        <property name="defaultEncoding" value="utf-8"></property>  
 
        <property name="maxUploadSize" value="2097152"></property>    
    </bean>  -->
    
    <bean name="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8"></property>
		<property name="maxUploadSize" value="2147483648"></property>
	</bean>
    
    
    <!--6, 两个标准配置 -->
	<!-- 将springMVC不能处理的请求交给tomcat处理  这样静态动态资源都能访问成功 -->
	<mvc:default-servlet-handler/>
	<!-- 能支持springMVC更高级的的一些功能，JSR303的校验，快捷的ajax,映射动态请求 -->
	<mvc:annotation-driven/>

</beans>
